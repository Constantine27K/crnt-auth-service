syntax = "proto3";

package github.constantine27k.crnt_auth_service.api.auth;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Constantine27K/crnt-auth-service/pkg/api/auth;auth";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Auth";
		version: "0.1";
	};

	schemes: HTTP;
	consumes: "application/json";
	produces: "application/json";
};

service Auth {
	rpc Login (LoginRequest) returns (LoginResponse) {
		option (google.api.http) = {
			post: "/v1/login"
			body: "*"
		};
	};
	rpc Authorize (AuthRequest) returns (AuthResponse) {
		option (google.api.http) = {
			post: "/v1/auth/{entity}"
		};
	};
}

message Secret {
	string login = 1;
	string password = 2;
	string role = 3;
}

message LoginRequest {
	// role is not obligatory
	Secret secret = 1;
}

message LoginResponse {
	string access_token = 1;
}

message AuthRequest {
	// user or admin
	string entity = 1;
}

message AuthResponse {
	string username = 1;
	string role = 2;
	int64 team = 3;
}